{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1bbYGdWi_dKiB0HoLFBXxshe_0yemJtea","timestamp":1729677554632}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["**Текст, выделенный полужирным шрифтом**\n","Скареднов Никита Андреевич\n","---\n","\n"],"metadata":{"id":"tKNG_RzWxG6g"}},{"cell_type":"markdown","source":["# **Дисклеймер**\n","\n","В данной практике будет введен дополнительный критерий: чистота и читаемость кода, а также соблюдение правил описанных в начале практики"],"metadata":{"id":"cFcrKfclKWh0"}},{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"0SnE87X1xDlV"}},{"cell_type":"markdown","source":["# Задание 1\n","\n","**Задача:**\n","\n","Напишите функцию очищающий список от дубликтов\n","\n","\n","*Запрещено:*\n","\n","*   Использовать set() или готовые функции очищающие список от дубликатов\n","\n","Вввод:\n","\n","```\n","apple banana apple 1 3 4 4 5\n","```\n","\n","\n","Вывод:\n","\n","```\n","apple banana 1 3 4 5\n","```\n","\n"],"metadata":{"id":"VxawR9NubT_F"}},{"cell_type":"code","source":["def remove_duplicates(input_list):\n","    result = []\n","    for item in input_list:\n","        if item not in result:\n","            result.append(item)\n","    return result\n","\n","\n","input_data = ['apple', 'banana', 'apple', 1, 3, 4, 4, 5]\n","output_data = remove_duplicates(input_data)\n","print(output_data)"],"metadata":{"id":"ml5gnbPXbeju","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729684598909,"user_tz":-300,"elapsed":311,"user":{"displayName":"Никита Скареднов","userId":"16510099658228958990"}},"outputId":"da3587fc-62ea-4492-9dc4-859e27091056"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['apple', 'banana', 1, 3, 4, 5]\n"]}]},{"cell_type":"markdown","source":["# Задание 2\n","\n","**Задача:**\n","\n","Написать функцию для нахождения простых чисел в диапазоне\n","\n","Ввод:\n","\n","```\n","10, 50\n","```\n","\n","Вывод:\n","\n","```\n","11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47\n","```"],"metadata":{"id":"y05x0eD0cVCC"}},{"cell_type":"code","source":["def is_prime(num):\n","    if num < 2:\n","        return False\n","    for i in range(2, int(num**0.5) + 1):\n","        if num % i == 0:\n","            return False\n","    return True\n","def find_primes_in_range(start, end):\n","    primes = []\n","    for num in range(start, end + 1):\n","        if is_prime(num):\n","            primes.append(num)\n","    return primes\n","\n","\n","start = 10\n","end = 50\n","prime_numbers = find_primes_in_range(start, end)\n","print(\"Простые числа в диапазоне:\", prime_numbers)"],"metadata":{"id":"XSMJnLgrc6Bf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729679307318,"user_tz":-300,"elapsed":313,"user":{"displayName":"Никита Скареднов","userId":"16510099658228958990"}},"outputId":"10878254-c2ad-4a21-d380-e88caecfcaca"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Простые числа в диапазоне: [11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]\n"]}]},{"cell_type":"markdown","source":["# Задание 3\n","\n","Напишите функцию для объединения двух списков (список ключей и список значении) в словарь\n","\n","*Запрещено:*\n","\n","*   Использования готовых функции для объединения списков (пример: zip() )\n","\n","Дано:\n","\n","```\n","keys = ['a', 'b', 'c', 'e' ]\n","values = [1, 2, 3, 4]\n","```\n","\n","Вывод:\n","```\n","{'a': 1, 'b': 2, 'c': 3, 'e': 4}\n","```\n","\n","\n"],"metadata":{"id":"vYM0LyxxdElN"}},{"cell_type":"code","source":["def combine_lists_to_dict(keys, values):\n","    result_dict = {}\n","    if len(keys) > len(values):\n","        raise ValueError(\"Количество ключей превышает количество значений\")\n","    for i in range(len(keys)):\n","        result_dict[keys[i]] = values[i]\n","    return result_dict\n","\n","\n","keys = ['a', 'b', 'c', 'e']\n","values = [1, 2, 3, 4]\n","result = combine_lists_to_dict(keys, values)\n","print(result)\n"],"metadata":{"id":"CRvhHTjCdvjS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729683049860,"user_tz":-300,"elapsed":311,"user":{"displayName":"Никита Скареднов","userId":"16510099658228958990"}},"outputId":"d3cc09c9-f941-46cb-d249-68fe05bc4ca9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'a': 1, 'b': 2, 'c': 3, 'e': 4}\n"]}]},{"cell_type":"markdown","source":["# Задание 4\n","\n","Напишите функцию(ии) для подсчета статистических параметров:\n","*   Сумму\n","*   Среднее арифметическое\n","*   Медиану\n","*   Моду\n","\n","\n","*Запрещено:*\n","\n","*   sum()\n","*   sorted()\n","*   и других функции предоставляющих готовое решение задания\n","\n","Дано:\n","\n","```\n","numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]\n","\n","```\n","\n","Вывод:\n","```\n","{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}\n","```\n"],"metadata":{"id":"L_w8H8i-fQcP"}},{"cell_type":"code","source":["def calculate_statistics(numbers):\n","    total_sum = 0\n","    for num in numbers:\n","        total_sum += num\n","    mean = total_sum / len(numbers)\n","    def manual_sort(arr):\n","        for i in range(len(arr)):\n","            for j in range(i + 1, len(arr)):\n","                if arr[i] > arr[j]:\n","                    arr[i], arr[j] = arr[j], arr[i]\n","        return arr\n","    sorted_numbers = manual_sort(numbers.copy())\n","    n = len(sorted_numbers)\n","    if n % 2 == 0:\n","        median = (sorted_numbers[n // 2 - 1] + sorted_numbers[n // 2]) / 2\n","    else:\n","        median = sorted_numbers[n // 2]\n","    frequency = {}\n","    for num in numbers:\n","        if num in frequency:\n","            frequency[num] += 1\n","        else:\n","            frequency[num] = 1\n","    mode = max(frequency.items(), key=lambda x: x[1])[0]\n","    return {\n","        'mean': mean,\n","        'median': median,\n","        'mode': mode,\n","        'sum': total_sum\n","    }\n","\n","\n","numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n","statistics = calculate_statistics(numbers)\n","print(statistics)"],"metadata":{"id":"dW6jW_rjfuba","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729683493917,"user_tz":-300,"elapsed":309,"user":{"displayName":"Никита Скареднов","userId":"16510099658228958990"}},"outputId":"6b98b1c2-a10a-4312-b4fb-6636ea3f69a7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}\n"]}]},{"cell_type":"markdown","source":["# Задание 5\n","\n","На ввод поступает строка символов. Строка состоит из слов, которые отделены друг от друга пробелами. Необходимо вывести самое длинное слово и его порядковый номер.\n","\n","*Запрещено:*\n","\n","*   len()\n","\n","Дано:\n","\n","```\n","Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.\n","\n","```\n","\n","Вывод:\n","```\n","Самое длинное слово с номером 5: обязательны\n","```"],"metadata":{"id":"hZW0NZ7SgTcp"}},{"cell_type":"code","source":["def longest_word(sentence):\n","    words = sentence.split()\n","    max_length = 0\n","    longest_word = \"\"\n","    position = 0\n","\n","\n","    for index, word in enumerate(words):\n","        word_length = 0\n","        for char in word:\n","            word_length += 1\n","        if word_length > max_length:\n","            max_length = word_length\n","            longest_word = word\n","            position = index + 1\n","    return longest_word, position\n","\n","\n","input_string = \"Страдание и боль всегда обязательны для широкого сознания и глубокого сердца\"\n","longest, pos = longest_word(input_string)\n","print(f\"Самое длинное слово с номером {pos}: {longest}\")\n","\n"],"metadata":{"id":"rC5DpHHLsDYp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729682997285,"user_tz":-300,"elapsed":300,"user":{"displayName":"Никита Скареднов","userId":"16510099658228958990"}},"outputId":"8c10aca2-047a-4bc1-c7d8-0ef47e83f5b1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Самое длинное слово с номером 5: обязательны\n"]}]},{"cell_type":"markdown","source":["# Задание 6\n","\n","Напишите программу, для управления оценками студентов, со следующими функциями:\n","\n","* Добавление информации о студенте и его оценках.\n","* Подсчет среднего балла студента.\n","* Получение списка всех студентов с их средними баллами.\n","* Поиск студента по имени и вывод его оценок и среднего балла.\n","\n","\n","\n"],"metadata":{"id":"k5BzJW5ZeaQN"}},{"cell_type":"code","source":["class Student:\n","\n","    def __init__(self, name):\n","\n","        self.name = name\n","\n","        self.grades = []\n","\n","    def add_grade(self, grade):\n","\n","        self.grades.append(grade)\n","\n","\n","\n","    def average_grade(self):\n","\n","        if not self.grades:\n","\n","            return 0\n","\n","        return sum(self.grades) / len(self.grades)\n","\n","class StudentManager:\n","\n","    def __init__(self):\n","\n","        self.students = {}\n","\n","    def add_student(self, name):\n","\n","        if name not in self.students:\n","\n","            self.students[name] = Student(name)\n","\n","            print(f\"Студент {name} добавлен.\")\n","\n","        else:\n","\n","            print(f\"Студент {name} уже существует.\")\n","\n","    def add_grade(self, name, grade):\n","\n","        if name in self.students:\n","\n","            self.students[name].add_grade(grade)\n","\n","            print(f\"Оценка {grade} добавлена для студента {name}.\")\n","\n","        else:\n","\n","            print(f\"Студент {name} не найден.\")\n","\n","    def get_average_grades(self):\n","\n","        average_grades = {}\n","\n","        for student in self.students.values():\n","\n","            average_grades[student.name] = student.average_grade()\n","\n","        return average_grades\n","\n","    def find_student(self, name):\n","\n","        if name in self.students:\n","\n","            student = self.students[name]\n","\n","            return student.grades, student.average_grade()\n","\n","        else:\n","\n","            return None\n","\n","def main():\n","\n","    manager = StudentManager()\n","\n","    while True:\n","\n","        print(\"nМеню:\")\n","\n","        print(\"1. Добавить студента\")\n","\n","        print(\"2. Добавить оценку\")\n","\n","        print(\"3. Получить список студентов и их средние баллы\")\n","\n","        print(\"4. Найти студента по имени\")\n","\n","        print(\"5. Выход\")\n","\n","        choice = input(\"Выберите действие: \")\n","\n","        if choice == '1':\n","\n","            name = input(\"Введите имя студента: \")\n","\n","            manager.add_student(name)\n","\n","        elif choice == '2':\n","\n","            name = input(\"Введите имя студента: \")\n","\n","            grade = float(input(\"Введите оценку: \"))\n","\n","            manager.add_grade(name, grade)\n","\n","        elif choice == '3':\n","\n","            averages = manager.get_average_grades()\n","\n","            for student, avg in averages.items():\n","\n","                print(f\"{student}: {avg:.2f}\")\n","\n","        elif choice == '4':\n","\n","            name = input(\"Введите имя студента: \")\n","\n","            result = manager.find_student(name)\n","\n","            if result:\n","\n","                grades, avg = result\n","\n","                print(f\"Оценки студента {name}: {grades}, Средний балл: {avg:.2f}\")\n","\n","            else:\n","\n","                print(f\"Студент {name} не найден.\")\n","\n","        elif choice == '5':\n","\n","            print(\"Выход из программы.\")\n","\n","            break\n","\n","        else:\n","\n","            print(\"Неверный выбор. Пожалуйста, попробуйте снова.\")\n","\n","\n","if __name__ == \"__main__\":\n","\n","    main()"],"metadata":{"id":"cvhlltVbdyoL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729684777537,"user_tz":-300,"elapsed":53722,"user":{"displayName":"Никита Скареднов","userId":"16510099658228958990"}},"outputId":"c0fc517c-95f1-44da-fef6-85d7858d1ea7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["nМеню:\n","1. Добавить студента\n","2. Добавить оценку\n","3. Получить список студентов и их средние баллы\n","4. Найти студента по имени\n","5. Выход\n","Выберите действие: 1\n","Введите имя студента: Никита\n","Студент Никита добавлен.\n","nМеню:\n","1. Добавить студента\n","2. Добавить оценку\n","3. Получить список студентов и их средние баллы\n","4. Найти студента по имени\n","5. Выход\n","Выберите действие: 5\n","Выход из программы.\n"]}]},{"cell_type":"markdown","source":["# Задание 7\n","\n","\n","**Задача:**\n","\n","Создайте приложение-викторину с командной строкой, которое задает пользователям вопросы по различным темам и отслеживает их результаты.\n","\n","Ключевые особенности:\n","\n","*   Хранение данных о вопросах и ответах на них, а также баллов за каждый вопрос\n","*   Реализуйте функцию для представления вопросов, принятия ответов пользователей и предоставления обратной связи о том, являются ли ответы правильными или неправильными.\n","*  После завершения викторины отобразите общий балл пользователя из числа ответов на вопросы.\n","*  Реализуйте функцию добавления нового вопроса\n","*  Реализуйте функцию перемешивания вопросов, для отображения случайного вопроса\n"],"metadata":{"id":"iQ8Z-7PYgu1_"}},{"cell_type":"code","source":["import random\n","\n","questions = [\n","    {\"question\": \"Какой цвет у неба?\", \"answer\": \"синий\", \"points\": 1},\n","    {\"question\": \"Сколько планет в Солнечной системе?\", \"answer\": \"восемь\", \"points\": 2},\n","    {\"question\": \"Кто написал 'Войну и мир'?\", \"answer\": \"толстой\", \"points\": 3},\n","]\n","\n","\n","def ask_questions():\n","    score = 0\n","    random.shuffle(questions)\n","\n","    for q in questions:\n","        user_answer = input(q[\"question\"] + \" \").lower()\n","        if user_answer == q[\"answer\"]:\n","            print(\"Правильно!\")\n","            score += q[\"points\"]\n","        else:\n","            print(\"Неправильно! Правильный ответ:\", q[\"answer\"])\n","\n","    return score\n","\n","\n","def add_question():\n","    question = input(\"Введите новый вопрос: \")\n","    answer = input(\"Введите правильный ответ: \").lower()\n","    points = int(input(\"Введите количество баллов за этот вопрос: \"))\n","    questions.append({\"question\": question, \"answer\": answer, \"points\": points})\n","    print(\"Вопрос добавлен!\")\n","\n","\n","def main():\n","    while True:\n","        print(\"1. Начать викторину\")\n","        print(\"2. Добавить новый вопрос\")\n","        print(\"3. Выйти\")\n","        choice = input(\"Выберите действие: \")\n","\n","        if choice == '1':\n","            total_score = ask_questions()\n","            print(\"Ваш общий балл:\", total_score)\n","        elif choice == '2':\n","            add_question()\n","        elif choice == '3':\n","            print(\"Спасибо за участие!\")\n","            break\n","        else:\n","            print(\"Неверный выбор, попробуйте снова.\")\n","\n","if __name__ == \"__main__\":\n","    main()"],"metadata":{"id":"DhxyYwHwh2V4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730040959682,"user_tz":-300,"elapsed":25802,"user":{"displayName":"Никита Скареднов","userId":"16510099658228958990"}},"outputId":"20d023d6-ad48-446e-9135-7ebdab7c7d3a"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["1. Начать викторину\n","2. Добавить новый вопрос\n","3. Выйти\n","Выберите действие: 2\n","Введите новый вопрос: что такое любовь?\n","Введите правильный ответ: пер\n","Введите количество баллов за этот вопрос: 5\n","Вопрос добавлен!\n","1. Начать викторину\n","2. Добавить новый вопрос\n","3. Выйти\n","Выберите действие: 3\n","Спасибо за участие!\n"]}]}]}