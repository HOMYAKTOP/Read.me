{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1TEBJaKANAI0JxDY268tNeKGpHMChb2sK","timestamp":1729073188427}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["ФИО:"],"metadata":{"id":"Bu5gIJfHNPHw"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"CbHI8c7cM9Eg","executionInfo":{"status":"ok","timestamp":1729073238070,"user_tz":-300,"elapsed":415,"user":{"displayName":"Никита Скареднов","userId":"16510099658228958990"}},"outputId":"25feb0d5-2373-4b69-e52f-fd4a98ff2826","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["Скареднов Никита Андреевич\n"]}],"source":["print(\"Скареднов Никита Андреевич\")"]},{"cell_type":"markdown","source":["# **Задание 1**"],"metadata":{"id":"VrNrBpmocGRd"}},{"cell_type":"markdown","source":["\n","\n","Дан словарь, содержащий имена и возраст людей, напишите программу выводящую возраст человека по имени\n","\n","Дано:\n","\n","```\n","{\"Alice\": 25, \"Bob\": 30, \"Charlie\": 35}\n","```\n","\n","Вввод:\n","\n","\n","```\n","Alice\n","```\n","\n","Вывод:\n","\n","\n","```\n","Alice 25\n","```\n"],"metadata":{"id":"XhV1bnm1bR2h"}},{"cell_type":"code","source":["ages = {\n","    \"Alice\": 25,\"Bob\": 30,\"Charlie\": 35\n","    }\n","name = input(\"Введите имя: \")\n","if name in ages:\n","    print(f\"{name} {ages[name]}\")\n","else:\n","    print(\"Имя не найдено.\")"],"metadata":{"id":"PElJj6DvsgjD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729074823280,"user_tz":-300,"elapsed":5572,"user":{"displayName":"Никита Скареднов","userId":"16510099658228958990"}},"outputId":"655ce141-88a0-48f4-d9e5-685a337dd088"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите имя: Alice\n","Alice 25\n"]}]},{"cell_type":"markdown","source":["# **Задание 2**\n"],"metadata":{"id":"lpjJz-_YcJ-t"}},{"cell_type":"markdown","source":["\n","\n","Дан список, состоящий из целых чисел, необходимо написать функцию считающую сумму всех положительных четных чисел списка\n","\n","Ввод:\n","\n","```\n","1, 2, 3, 4, 5, 6, 7, 8, 9\n","```\n","\n","Вывод:\n","\n","\n","```\n","20\n","```\n","\n","***Запрещено:***\n","\n","*   Использование готовых функций для суммирования чисел\n"],"metadata":{"id":"tMEsAB4rUiWW"}},{"cell_type":"code","source":["def sum_positive_even_numbers(numbers):\n","    total_sum = 0\n","    number = input(\"Ввод: \")\n","    for number in numbers:\n","        if number > 0 and number % 2 == 0:\n","            total_sum += number\n","    return total_sum\n","input_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n","result = sum_positive_even_numbers(input_numbers)\n","print(result)"],"metadata":{"id":"wDNUFLeqNQS_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729074886140,"user_tz":-300,"elapsed":13088,"user":{"displayName":"Никита Скареднов","userId":"16510099658228958990"}},"outputId":"da179910-41b9-4bb1-a676-22e89596ecf4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Ввод: 1, 2, 3, 4, 5, 6, 7, 8, 9\n","20\n"]}]},{"cell_type":"markdown","source":["# **Задание 3**"],"metadata":{"id":"WT_v-vz1dUZJ"}},{"cell_type":"markdown","source":["Дан словарь, содержащий название фрукта и его цвет, выведите список всех желтых фруктов\n","\n","\n","Дано:\n","\n","```\n","fruits_and_colors = {\n","    \"apple\": \"red\",\n","    \"banana\": \"yellow\",\n","    \"mango\": \"yellow\",\n","    \"orange\": \"orange\",\n","    \"lemon\": \"yellow\",\n","    \"grape\": \"purple\"\n","}\n","```\n","\n","Вывод:\n","\n","\n","```\n","Yellow fruits:\n","banana\n","lemon\n","mango\n","```\n","\n"],"metadata":{"id":"ZI5Xeh2DdXgF"}},{"cell_type":"code","source":["\n","fruits_and_colors = {\n","    \"apple\": \"red\",\n","    \"banana\": \"yellow\",\n","    \"mango\": \"yellow\",\n","    \"orange\": \"orange\",\n","    \"lemon\": \"yellow\",\n","    \"grape\": \"purple\"\n","}\n","print(\"Yellow Fruits:\")\n","for fruit, color in fruits_and_colors.items():\n","\n","    if color == \"yellow\":\n","\n","        print(fruit)\n","\n"],"metadata":{"id":"aNzFTkhKdkTG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729076511956,"user_tz":-300,"elapsed":304,"user":{"displayName":"Никита Скареднов","userId":"16510099658228958990"}},"outputId":"f208d6c7-59cf-496b-c085-ab2a90e18012"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Yellow Fruits:\n","banana\n","mango\n","lemon\n"]}]},{"cell_type":"markdown","source":["# **Задание 4**\n"],"metadata":{"id":"iHtMGt2icM7w"}},{"cell_type":"markdown","source":["\n","\n","Дан словарь, необходимо написать функцию меняющую ключ и значение местами\n","\n","Дано:\n","\n","\n","```\n","{\"a\": 1, \"b\": 2, \"c\": 3}\n","```\n","\n","Вывод:\n","\n","```\n","{1: 'a', 2: 'b', 3: 'c'}\n","```\n","\n"],"metadata":{"id":"rS3THsnBQ_EB"}},{"cell_type":"code","source":[],"metadata":{"id":"C_JjEHLnBPhH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def swap_keys_values(original_dict):\n","    swapped_dict = {value: key for key, value in original_dict.items()}\n","    return swapped_dict\n","original_dict = {\n","    'a': 1,\n","    'b': 2,\n","    'c': 3\n","}\n","swapped_dict = swap_keys_values(original_dict)\n","print(swapped_dict)\n"],"metadata":{"id":"MNRusyLDcQ59","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729077001427,"user_tz":-300,"elapsed":308,"user":{"displayName":"Никита Скареднов","userId":"16510099658228958990"}},"outputId":"35f47e65-5563-457a-8d29-9c9f8317989a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{1: 'a', 2: 'b', 3: 'c'}\n"]}]},{"cell_type":"markdown","source":["# **Задание 5**"],"metadata":{"id":"x6ff5nd0cUxD"}},{"cell_type":"markdown","source":["Дан список слов, неограниченной длинны, сформируйте словарь, где в качестве ключа будет слово, а в качестве значения количество символов\n","\n","**Критерии**\n","\n","\n","*   Словарь необходимо отсортировать по убыванию количества элементов в списке.\n","*   Подсчет элементов должен быть реализован в отдельной функции\n","*   Сортировка пары `ключ:значение` должна быть реализована также в виде отдельной функции\n","\n","\n","\n","\n","Дано:\n","```\n","['apple','banana','orange','apple','apple','banana']\n","```\n","\n","\n","Вывод:\n","```\n","{'apple':3, 'banana': 2, 'orange': 1}\n","```\n","\n","***Запрещено:***\n","\n","*   Использование готовых функций для сортировки\n","*   Использование готовых функций для подсчета элементов\n","\n"],"metadata":{"id":"ypQNHOG4NQz3"}},{"cell_type":"code","source":["def count_characters(word_list):\n","    char_count = {}\n","\n","    for word in word_list:\n","        if word in char_count:\n","            char_count[word] += 1\n","        else:\n","            char_count[word] = 1\n","    return char_count\n","def sort_dict_by_value(d):\n","    sorted_dict = {}\n","    while d:\n","        max_key = None\n","        max_value = -1\n","        for key, value in d.items():\n","            if value > max_value:\n","                max_value = value\n","                max_key = key\n","        sorted_dict[max_key] = max_value\n","        del d[max_key]\n","    return sorted_dict\n","\n","word_list = ['apple', 'banana', 'orange', 'apple', 'apple', 'banana']\n","char_count = count_characters(word_list)\n","sorted_char_count = sort_dict_by_value(char_count)\n","print(sorted_char_count)"],"metadata":{"id":"J10PjdVQUbyq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729077690017,"user_tz":-300,"elapsed":298,"user":{"displayName":"Никита Скареднов","userId":"16510099658228958990"}},"outputId":"246c96be-00cc-46f5-c7c7-72abfd1efa21"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'apple': 3, 'banana': 2, 'orange': 1}\n"]}]},{"cell_type":"markdown","source":["# **Задание 6**"],"metadata":{"id":"d7fDUr2WcY_G"}},{"cell_type":"markdown","source":["Дан словарь, содержащий информацию о людях, необходимо:\n","\n","\n","\n","*   Вывести всех людей старше 30 лет\n","*   Вывести список городов и количество людей из словаря проживающих в них\n","*   Вывести список профессий и список людей для каждой профессии\n","\n","**Критерии**\n","\n","Каждый из пунктов необходимо реализовать в виде функции\n","\n"],"metadata":{"id":"m11qdVhSWBi7"}},{"cell_type":"code","source":["people_info = {\n","    \"Alice\": {\"age\": 25, \"city\": \"New York\", \"occupation\": \"Engineer\"},\n","    \"Bob\": {\"age\": 30, \"city\": \"Los Angeles\", \"occupation\": \"Designer\"},\n","    \"Charlie\": {\"age\": 35, \"city\": \"Chicago\", \"occupation\": \"Teacher\"},\n","    \"Diana\": {\"age\": 28, \"city\": \"Miami\", \"occupation\": \"Doctor\"},\n","    \"Ethan\": {\"age\": 40, \"city\": \"Seattle\", \"occupation\": \"Chef\"},\n","    \"Frank\": {\"age\": 32, \"city\": \"Atlanta\", \"occupation\": \"Lawyer\"},\n","    \"Gabriella\": {\"age\": 29, \"city\": \"San Francisco\", \"occupation\": \"Software Engineer\"},\n","    \"Harrison\": {\"age\": 38, \"city\": \"Denver\", \"occupation\": \"Architect\"},\n","    \"Isabella\": {\"age\": 26, \"city\": \"Washington D.C.\", \"occupation\": \"Journalist\"},\n","    \"Julian\": {\"age\": 42, \"city\": \"Miami\", \"occupation\": \"Musician\"},\n","    \"Kate\": {\"age\": 31, \"city\": \"Philadelphia\", \"occupation\": \"Nurse\"},\n","    \"Lucas\": {\"age\": 36, \"city\": \"Nashville\", \"occupation\": \"Businessman\"},\n","    \"Mia\": {\"age\": 27, \"city\": \"Atlanta\", \"occupation\": \"Artist\"},\n","    \"Natalie\": {\"age\": 39, \"city\": \"Portland\", \"occupation\": \"Writer\"},\n","    \"Oliver\": {\"age\": 44, \"city\": \"Minneapolis\", \"occupation\": \"Professor\"},\n","    \"Penelope\": {\"age\": 33, \"city\": \"San Diego\", \"occupation\": \"Marketing Manager\"},\n","    \"Quincy\": {\"age\": 41, \"city\": \"Nashville\", \"occupation\": \"Singer\"},\n","    \"Rachel\": {\"age\": 34, \"city\": \"Cleveland\", \"occupation\": \"Teacher\"},\n","    \"Sophia\": {\"age\": 29, \"city\": \"Nashville\", \"occupation\": \"Engineer\"},\n","    \"Tessa\": {\"age\": 37, \"city\": \"Miami\", \"occupation\": \"Lawyer\"}\n","}"],"metadata":{"id":"lSNtB39OWtFl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def people_over_30(people):\n","    return {name: info for name, info in people.items() if info['age'] > 30}\n","def cities_count(people):\n","    city_count = {}\n","    for info in people.values():\n","        city = info['city']\n","        city_count[city] = city_count.get(city, 0) + 1\n","    return city_count\n","def occupations_list(people):\n","    occupation_dict = {}\n","    for name, info in people.items():\n","        occupation = info['occupation']\n","        if occupation:\n","            if occupation not in occupation_dict:\n","                occupation_dict[occupation] = []\n","            occupation_dict[occupation].append(name)\n","    return occupation_dict\n","\n","print(\"Люди старше 30 лет:\")\n","print(people_over_30(people_info))\n","print(\"Количество людей по городам:\")\n","print(cities_count(people_info))\n","print(\"Список профессий и людей для каждой профессии:\")\n","print(occupations_list(people_info))"],"metadata":{"id":"qcLO5eQwXkNK","colab":{"base_uri":"https://localhost:8080/","height":228},"executionInfo":{"status":"error","timestamp":1729410184888,"user_tz":-300,"elapsed":602,"user":{"displayName":"Никита Скареднов","userId":"16510099658228958990"}},"outputId":"58ef6ca8-e915-41ad-db5e-237795d3955e"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Люди старше 30 лет:\n"]},{"output_type":"error","ename":"NameError","evalue":"name 'people_info' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-4755df1190fe>\u001b[0m in \u001b[0;36m<cell line: 20>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     18\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     19\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Люди старше 30 лет:\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 20\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpeople_over_30\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpeople_info\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     21\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Количество людей по городам:\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     22\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcities_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpeople_info\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'people_info' is not defined"]}]},{"cell_type":"markdown","source":["# **Задание 7**"],"metadata":{"id":"27IuB2YScezw"}},{"cell_type":"markdown","source":["Задание: Разработка системы отзывов о предметах\n","\n","Описание: Создать программу на Python для хранения и управления отзывами о предметах учебного курса. Программа должна позволять пользователям добавлять, просматривать и удалять отзывы, а также вычислять средний балл по заданному предмету.\n","\n","**Функционал:**\n","\n","*   Добавление отзыва и оценки:\n","   *   Пользователь может ввести название предмета, оценку (от 1 до 5) и текст отзыва.\n","   *   Отзывы должны храниться в структуре данных (например, словаре), где ключом будет название предмета, а значением - список отзывов (каждый отзыв может хранить оценку и комментарий).\n","*   Просмотр отзывов и оценок:\n","   *   Пользователь может запросить отзывы для указанного предмета.\n","   *   Если для указанного предмета есть отзывы, программа должна отобразить список всех отзывов и соответствующих оценок.\n","*   Удаление отзыва:\n","   *   Пользователь может удалить отзыв по индексу. Необходимо заранее уведомить пользователя о том, какие отзывы доступны для удаления.\n","   *   Программа должна обработать ситуацию, когда индекс введен неправильно.\n","*   Вычисление среднего балла по предмету:\n","   *   Пользователь может ввести название предмета, и программа должна вычислить и вывести средний балл по всем отзывам для этого предмета.\n","   *   Если отзывов нет, программа должна сообщить об этом.\n","\n","\n","**Критерии:**\n","\n","*   Код должен быть оформлен в виде функций\n","*   Необходимо обрабатывать неправильный ввод пользователя\n","*   Должны быть комментарии к функциям\n","*   Присутсвует весь дополнительный функционал\n","\n","\n","\n","**Опционально:**\n","\n","Предлагаю вам добавить свои критерии оценки или вопросы, на которые должен ответить студент, чтобы оценить пару\n","\n","\n"],"metadata":{"id":"Fd95-S9cYhct"}},{"cell_type":"code","source":["reviews = {}\n","\n","def add_review():\n","    \"\"\"Добавление отзыва о предмете.\"\"\"\n","    subject = input(\"Введите название предмета: \")\n","    try:\n","        rating = int(input(\"Введите оценку (от 1 до 5): \"))\n","        if rating < 1 or rating > 5:\n","            raise ValueError(\"Оценка должна быть от 1 до 5.\")\n","    except ValueError as e:\n","        print(e)\n","        return\n","\n","    comment = input(\"Введите текст отзыва: \")\n","\n","    if subject not in reviews:\n","        reviews[subject] = []\n","\n","    reviews[subject].append((rating, comment))\n","    print(\"Отзыв добавлен.\")\n","\n","def view_reviews():\n","    \"\"\"Просмотр отзывов о предмете.\"\"\"\n","    subject = input(\"Введите название предмета для просмотра отзывов: \")\n","\n","    if subject in reviews and reviews[subject]:\n","        print(f\"Отзывы о предмете '{subject}':\")\n","        for index, (rating, comment) in enumerate(reviews[subject]):\n","            print(f\"{index + 1}. Оценка: {rating}, Отзыв: {comment}\")\n","    else:\n","        print(f\"Нет отзывов о предмете '{subject}'.\")\n","\n","def delete_review():\n","    \"\"\"Удаление отзыва о предмете.\"\"\"\n","    subject = input(\"Введите название предмета для удаления отзыва: \")\n","\n","    if subject in reviews and reviews[subject]:\n","        print(f\"Доступные отзывы о предмете '{subject}':\")\n","        for index, (rating, comment) in enumerate(reviews[subject]):\n","            print(f\"{index + 1}. Оценка: {rating}, Отзыв: {comment}\")\n","\n","        try:\n","            review_index = int(input(\"Введите номер отзыва для удаления: \")) - 1\n","            if review_index < 0 or review_index >= len(reviews[subject]):\n","                raise IndexError(\"Неверный индекс.\")\n","            removed_review = reviews[subject].pop(review_index)\n","            print(f\"Отзыв удален: Оценка: {removed_review[0]}, Отзыв: {removed_review[1]}\")\n","        except (ValueError, IndexError) as e:\n","            print(e)\n","    else:\n","        print(f\"Нет отзывов о предмете '{subject}'.\")\n","\n","def calculate_average():\n","    \"\"\"Вычисление среднего балла по предмету.\"\"\"\n","    subject = input(\"Введите название предмета для вычисления среднего балла: \")\n","\n","    if subject in reviews and reviews[subject]:\n","        total_rating = sum(rating for rating, _ in reviews[subject])\n","        average_rating = total_rating / len(reviews[subject])\n","        print(f\"Средний балл по предмету '{subject}': {average_rating:.2f}\")\n","    else:\n","        print(f\"Нет отзывов о предмете '{subject}'.\")\n","\n","def main():\n","    \"\"\"Основное меню программы.\"\"\"\n","    while True:\n","        print(\"nМеню:\")\n","        print(\"1. Добавить отзыв\")\n","        print(\"2. Просмотреть отзывы\")\n","        print(\"3. Удалить отзыв\")\n","        print(\"4. Вычислить средний балл\")\n","        print(\"5. Выход\")\n","\n","        choice = input(\"Выберите действие (1-5): \")\n","\n","        if choice == '1':\n","            add_review()\n","        elif choice == '2':\n","            view_reviews()\n","        elif choice == '3':\n","            delete_review()\n","        elif choice == '4':\n","            calculate_average()\n","        elif choice == '5':\n","            print(\"Выход из программы.\")\n","            break\n","        else:\n","            print(\"Неверный выбор. Пожалуйста, выберите число от 1 до 5.\")\n","\n","if __name__ == \"__main__\":\n","    main()"],"metadata":{"id":"kzucJrCUa0o7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729410285820,"user_tz":-300,"elapsed":24466,"user":{"displayName":"Никита Скареднов","userId":"16510099658228958990"}},"outputId":"287454b6-8927-4ccd-8260-822faf937707"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["nМеню:\n","1. Добавить отзыв\n","2. Просмотреть отзывы\n","3. Удалить отзыв\n","4. Вычислить средний балл\n","5. Выход\n","Выберите действие (1-5): 1\n","Введите название предмета: математика\n","Введите оценку (от 1 до 5): 5\n","Введите текст отзыва: хоорошш\n","Отзыв добавлен.\n","nМеню:\n","1. Добавить отзыв\n","2. Просмотреть отзывы\n","3. Удалить отзыв\n","4. Вычислить средний балл\n","5. Выход\n","Выберите действие (1-5): 5\n","Выход из программы.\n"]}]}]}